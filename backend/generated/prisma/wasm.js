
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id_usuario: 'id_usuario',
  nombre: 'nombre',
  apellido: 'apellido',
  nombre_usuario: 'nombre_usuario',
  contrasena_hash: 'contrasena_hash',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HuespedScalarFieldEnum = {
  id_huesped: 'id_huesped',
  nombre: 'nombre',
  apellido: 'apellido',
  documento_identidad: 'documento_identidad',
  numero_documento: 'numero_documento',
  ruc: 'ruc',
  nacionalidad: 'nacionalidad',
  telefono: 'telefono',
  email: 'email',
  fecha_nacimiento: 'fecha_nacimiento',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TipoHabitacionScalarFieldEnum = {
  id_tipo_habitacion: 'id_tipo_habitacion',
  nombre: 'nombre',
  descripcion: 'descripcion',
  capacidad: 'capacidad',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TarifaScalarFieldEnum = {
  id_tarifa: 'id_tarifa',
  fk_tipo_habitacion: 'fk_tipo_habitacion',
  descripcion: 'descripcion',
  precio: 'precio',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HabitacionScalarFieldEnum = {
  id_habitacion: 'id_habitacion',
  numero: 'numero',
  fk_tipo_habitacion: 'fk_tipo_habitacion',
  piso: 'piso',
  estado: 'estado',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReservaScalarFieldEnum = {
  id_reserva: 'id_reserva',
  fk_huesped: 'fk_huesped',
  fk_tipo_habitacion: 'fk_tipo_habitacion',
  check_in: 'check_in',
  check_out: 'check_out',
  estado: 'estado',
  fk_usuario: 'fk_usuario',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.IngresoScalarFieldEnum = {
  id_ingreso: 'id_ingreso',
  fk_reserva: 'fk_reserva',
  fk_habitacion: 'fk_habitacion',
  fk_huesped: 'fk_huesped',
  fk_tarifa: 'fk_tarifa',
  fecha_ingreso: 'fecha_ingreso',
  estado: 'estado',
  fk_usuario: 'fk_usuario',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HuespedHabitacionScalarFieldEnum = {
  id_huesped_habitacion: 'id_huesped_habitacion',
  fk_huesped: 'fk_huesped',
  fk_ingreso: 'fk_ingreso',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CuentaScalarFieldEnum = {
  id_cuenta: 'id_cuenta',
  fk_ingreso: 'fk_ingreso',
  estado: 'estado',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConsumoScalarFieldEnum = {
  id_consumo: 'id_consumo',
  fk_cuenta: 'fk_cuenta',
  descripcion: 'descripcion',
  cantidad: 'cantidad',
  monto: 'monto',
  fk_usuario: 'fk_usuario',
  activo: 'activo'
};

exports.Prisma.TimbradoScalarFieldEnum = {
  id_timbrado: 'id_timbrado',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  codigo_sucursal: 'codigo_sucursal',
  codigo_punto_facturacion: 'codigo_punto_facturacion',
  numero_secuencial: 'numero_secuencial',
  activo: 'activo'
};

exports.Prisma.FacturaScalarFieldEnum = {
  id_factura: 'id_factura',
  fk_cuenta: 'fk_cuenta',
  fk_timbrado: 'fk_timbrado',
  fecha_emision: 'fecha_emision',
  condicion_venta: 'condicion_venta',
  total: 'total',
  fk_usuario: 'fk_usuario'
};

exports.Prisma.DetalleFacturaScalarFieldEnum = {
  id_detalle_factura: 'id_detalle_factura',
  fk_factura: 'fk_factura',
  descripcion: 'descripcion',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario',
  descuento: 'descuento',
  porcentaje_iva: 'porcentaje_iva'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.DocumentoIdentidad = exports.$Enums.DocumentoIdentidad = {
  DNI: 'DNI',
  PASAPORTE: 'PASAPORTE',
  LICENCIA: 'LICENCIA'
};

exports.Nacionalidad = exports.$Enums.Nacionalidad = {
  PARAGUAY: 'PARAGUAY',
  BRASIL: 'BRASIL',
  ARGENTINA: 'ARGENTINA',
  OTRO: 'OTRO'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Huesped: 'Huesped',
  TipoHabitacion: 'TipoHabitacion',
  Tarifa: 'Tarifa',
  Habitacion: 'Habitacion',
  Reserva: 'Reserva',
  Ingreso: 'Ingreso',
  HuespedHabitacion: 'HuespedHabitacion',
  Cuenta: 'Cuenta',
  Consumo: 'Consumo',
  Timbrado: 'Timbrado',
  Factura: 'Factura',
  DetalleFactura: 'DetalleFactura'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
